{
  "timestamp": "2025-06-05T12:40:12.882Z",
  "summary": {
    "critical": 4,
    "high": 8,
    "medium": 1
  },
  "findings": [
    {
      "file": "src/metrics/broker_definitions.go",
      "missing": "NetworkProcessorAvgIdlePercent",
      "mskName": "kafka.broker.networkProcessorIdlePercent",
      "severity": "high",
      "category": "Metric Mappings"
    },
    {
      "file": "src/metrics/broker_definitions.go",
      "missing": "FetchConsumerRequestsPerSec",
      "mskName": "kafka.broker.fetchConsumerRequestsPerSec",
      "severity": "high",
      "category": "Metric Mappings"
    },
    {
      "file": "src/metrics/broker_definitions.go",
      "missing": "OfflinePartitionsCount",
      "mskName": "kafka.broker.offlinePartitionsCount",
      "severity": "high",
      "category": "Metric Mappings"
    },
    {
      "file": "src/metrics/broker_definitions.go",
      "missing": "ActiveControllerCount",
      "mskName": "kafka.broker.activeControllerCount",
      "severity": "high",
      "category": "Metric Mappings"
    },
    {
      "file": "src/metrics/broker_definitions.go",
      "missing": "ProduceTotalTimeMs",
      "mskName": "kafka.broker.produceTotalTime",
      "severity": "high",
      "category": "Metric Mappings"
    },
    {
      "file": "src/metrics/broker_definitions.go",
      "missing": "FetchConsumerTotalTimeMs",
      "mskName": "kafka.broker.fetchConsumerTotalTime",
      "severity": "high",
      "category": "Metric Mappings"
    },
    {
      "file": "src/msk/simple_transformer.go",
      "issue": "Missing kafka.* metric prefix transformations",
      "severity": "critical",
      "category": "Transformations"
    },
    {
      "file": "src/msk/simple_transformer.go",
      "issue": "Missing entity.type AWS_KAFKA_* mapping",
      "severity": "critical",
      "category": "Transformations"
    },
    {
      "file": "src/msk/metric_mapper.go",
      "issue": "Missing kafka.* metric prefix transformations",
      "severity": "critical",
      "category": "Transformations"
    },
    {
      "file": "src/msk/metric_mapper.go",
      "issue": "Missing entity.type AWS_KAFKA_* mapping",
      "severity": "critical",
      "category": "Transformations"
    },
    {
      "method": "Average",
      "metrics": [
        "requestHandlerIdlePercent",
        "networkProcessorIdlePercent"
      ],
      "severity": "high",
      "impact": "Cannot aggregate requestHandlerIdlePercent, networkProcessorIdlePercent",
      "category": "Aggregation"
    },
    {
      "method": "Max",
      "metrics": [
        "offlinePartitionsCount",
        "activeControllerCount"
      ],
      "severity": "high",
      "impact": "Cannot aggregate offlinePartitionsCount, activeControllerCount",
      "category": "Aggregation"
    },
    {
      "issue": "Dimensional metrics not enabled",
      "severity": "medium",
      "fix": "Set MSK_USE_DIMENSIONAL=true",
      "category": "Integration"
    }
  ],
  "workingPatterns": {
    "requiredMetrics": {
      "broker": {
        "kafka.broker.bytesIn": "BytesInPerSec",
        "kafka.broker.bytesOut": "BytesOutPerSec",
        "kafka.broker.messagesIn": "MessagesInPerSec",
        "kafka.broker.requestHandlerIdlePercent": "RequestHandlerAvgIdlePercent",
        "kafka.broker.networkProcessorIdlePercent": "NetworkProcessorAvgIdlePercent",
        "kafka.broker.produceRequestsPerSec": "ProduceRequestsPerSec",
        "kafka.broker.fetchConsumerRequestsPerSec": "FetchConsumerRequestsPerSec",
        "kafka.broker.underReplicatedPartitions": "UnderReplicatedPartitions",
        "kafka.broker.offlinePartitionsCount": "OfflinePartitionsCount",
        "kafka.broker.activeControllerCount": "ActiveControllerCount",
        "kafka.broker.logFlushRateAndTime": "LogFlushRateAndTimeMs",
        "kafka.broker.produceTotalTime": "ProduceTotalTimeMs",
        "kafka.broker.fetchConsumerTotalTime": "FetchConsumerTotalTimeMs"
      },
      "cluster": {
        "kafka.cluster.bytesIn": "Sum of broker bytesIn",
        "kafka.cluster.bytesOut": "Sum of broker bytesOut",
        "kafka.cluster.messagesIn": "Sum of broker messagesIn",
        "kafka.cluster.partitionCount": "Sum of partition counts",
        "kafka.cluster.topicCount": "Count of unique topics",
        "kafka.cluster.offlinePartitionsCount": "Max of broker offline partitions",
        "kafka.cluster.underReplicatedPartitions": "Sum of broker under replicated",
        "kafka.cluster.activeControllerCount": "Sum (should be 1)",
        "kafka.cluster.zookeeperSessionState": "ZooKeeper connection state"
      },
      "topic": {
        "kafka.topic.bytesIn": "Topic BytesInPerSec",
        "kafka.topic.bytesOut": "Topic BytesOutPerSec",
        "kafka.topic.messagesIn": "Topic MessagesInPerSec",
        "kafka.topic.partitionCount": "Partition count for topic",
        "kafka.topic.retentionSize": "Size retention config",
        "kafka.topic.retentionMs": "Time retention config"
      }
    },
    "entityTypes": {
      "AWSKAFKABROKER": "AWS_KAFKA_BROKER",
      "AWSKAFKACLUSTER": "AWS_KAFKA_CLUSTER",
      "AWSKAFKATOPIC": "AWS_KAFKA_TOPIC"
    },
    "aggregationMethods": {
      "Sum": [
        "bytesIn",
        "bytesOut",
        "messagesIn",
        "underReplicatedPartitions"
      ],
      "Average": [
        "requestHandlerIdlePercent",
        "networkProcessorIdlePercent"
      ],
      "Max": [
        "offlinePartitionsCount",
        "activeControllerCount"
      ],
      "Count": [
        "topicCount",
        "partitionCount"
      ]
    }
  }
}