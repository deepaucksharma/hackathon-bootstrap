apiVersion: v1
kind: ConfigMap
metadata:
  name: nri-kafka-config
  namespace: kafka-validation
data:
  kafka-broker-config.yml: |
    ---
    discovery:
      command:
        exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
        match:
          label.app.kubernetes.io/component: kafka
          label.app.kubernetes.io/name: kafka
    integrations:
      - name: nri-kafka
        env:
          CLUSTER_NAME: kafka-validation-cluster
          AUTODISCOVER_STRATEGY: bootstrap
          BOOTSTRAP_BROKER_HOST: ${discovery.podName}.kafka-headless.${discovery.namespace}.svc.cluster.local
          BOOTSTRAP_BROKER_JMX_PORT: "1099"
          BOOTSTRAP_BROKER_JMX_USER: monitorRole
          BOOTSTRAP_BROKER_JMX_PASSWORD: password
          METRICS: "true"
          INVENTORY: "true"
          LOCAL_ONLY_COLLECTION: "true"
  kafka-offset-config.yml: |
    ---
    discovery:
      command:
        exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
        match:
          label.app.kubernetes.io/component: kafka
          label.app.kubernetes.io/name: kafka
    integrations:
      - name: nri-kafka
        env:
          CLUSTER_NAME: kafka-validation-cluster
          METRICS: "false"
          INVENTORY: "false"
          CONSUMER_OFFSET: "true"
          AUTODISCOVER_STRATEGY: bootstrap
          BOOTSTRAP_BROKER_HOST: ${discovery.podName}.kafka-headless.${discovery.namespace}.svc.cluster.local
          BOOTSTRAP_BROKER_KAFKA_PORT: "9092"
          BOOTSTRAP_BROKER_KAFKA_PROTOCOL: PLAINTEXT
          CONSUMER_GROUP_REGEX: '.*'
  kafka-producer-config.yml: |
    ---
    discovery:
      command:
        exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
        match:
          label.app: kafka-producer
    integrations:
      - name: nri-kafka
        env:
          CLUSTER_NAME: kafka-validation-cluster
          PRODUCERS: '[{"host": "${discovery.ip}", "port": 1099}]'
          TOPIC_MODE: list
          TOPIC_LIST: '["test-topic", "metrics-topic"]'
          METRICS: "true"
  kafka-consumer-config.yml: |
    ---
    discovery:
      command:
        exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
        match:
          label.app: kafka-consumer
    integrations:
      - name: nri-kafka
        env:
          CLUSTER_NAME: kafka-validation-cluster
          CONSUMERS: '[{"host": "${discovery.ip}", "port": 1099}]'
          TOPIC_MODE: list
          TOPIC_LIST: '["test-topic", "metrics-topic"]'
          METRICS: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: newrelic-license
  namespace: kafka-validation
type: Opaque
stringData:
  license: YOUR_NEW_RELIC_LICENSE_KEY_HERE
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: newrelic-infrastructure
  namespace: kafka-validation
spec:
  selector:
    matchLabels:
      name: newrelic-infrastructure
  template:
    metadata:
      labels:
        name: newrelic-infrastructure
    spec:
      serviceAccountName: newrelic-infrastructure
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: newrelic-infrastructure
        image: newrelic/infrastructure-k8s:latest
        securityContext:
          privileged: true
        env:
        - name: NRIA_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license
              key: license
        - name: CLUSTER_NAME
          value: "kafka-validation-k8s"
        - name: NRIA_VERBOSE
          value: "1"
        - name: NRIA_PASSTHROUGH_ENVIRONMENT
          value: "KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT"
        volumeMounts:
        - name: host-root
          mountPath: /host
          readOnly: true
        - name: host-var-run-docker-sock
          mountPath: /var/run/docker.sock
        - name: integrations-config
          mountPath: /var/db/newrelic-infra/integrations.d/
        - name: nri-kafka-binary
          mountPath: /var/db/newrelic-infra/custom-integrations/bin/
      - name: nri-discovery-kubernetes
        image: newrelic/nri-discovery-kubernetes:latest
        env:
        - name: NRI_DISCOVERY_KUBERNETES_PORT
          value: "10250"
        - name: NRI_DISCOVERY_KUBERNETES_TLS
          value: "true"
      volumes:
      - name: host-root
        hostPath:
          path: /
      - name: host-var-run-docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: integrations-config
        configMap:
          name: nri-kafka-config
      - name: nri-kafka-binary
        hostPath:
          path: /home/deepak/src/nri-kafka/bin
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: newrelic-infrastructure
  namespace: kafka-validation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: newrelic-infrastructure
rules:
- apiGroups: [""]
  resources:
  - "nodes"
  - "nodes/metrics"
  - "nodes/stats"
  - "nodes/proxy"
  - "pods"
  - "services"
  - "endpoints"
  verbs: ["get", "list"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: newrelic-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-infrastructure
subjects:
- kind: ServiceAccount
  name: newrelic-infrastructure
  namespace: kafka-validation