# Enhanced MSK Shim Configuration
# Includes metric generation for guaranteed data population

apiVersion: v1
kind: ConfigMap
metadata:
  name: nri-kafka-msk-enhanced-config
  namespace: strimzi-kafka
  labels:
    app: nri-kafka-msk-enhanced
data:
  # Environment variables for MSK shim
  msk-shim.env: |
    # === MSK SHIM CONFIGURATION ===
    MSK_SHIM_ENABLED=true
    MSK_ENHANCED_MODE=true
    MSK_GENERATE_METRICS=true
    
    # AWS Configuration (can use dummy values for self-managed)
    AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID:-123456789012}
    AWS_REGION=${AWS_REGION:-us-east-1}
    MSK_CLUSTER_ARN=arn:aws:kafka:${AWS_REGION}:${AWS_ACCOUNT_ID}:cluster/${CLUSTER_NAME}/generated
    
    # Cluster identification
    KAFKA_CLUSTER_NAME=${CLUSTER_NAME:-strimzi-production-kafka}
    ENVIRONMENT=${ENVIRONMENT:-production}
    
    # Enhanced mode settings
    MSK_BATCH_SIZE=1000
    MSK_FLUSH_INTERVAL=5s
    MSK_AGGREGATION_METHOD=max
    
    # Metric generation settings
    CONSUMER_LAG_ENRICHMENT=true
    DISK_MOUNT_REGEX=data|kafka|log
    LOG_MOUNT_REGEX=logs|kafka-logs
    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-kafka-msk-enhanced
  namespace: strimzi-kafka
  labels:
    app: nri-kafka-msk-enhanced
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nri-kafka-msk-enhanced
  template:
    metadata:
      labels:
        app: nri-kafka-msk-enhanced
        component: monitoring
      annotations:
        prometheus.io/scrape: "false"
    spec:
      serviceAccountName: nri-kafka
      containers:
      - name: nri-kafka
        image: newrelic/nri-kafka:latest
        imagePullPolicy: Always
        
        # Load MSK shim environment variables
        envFrom:
        - configMapRef:
            name: nri-kafka-msk-enhanced-config
        
        env:
        # New Relic License Key
        - name: NRIA_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license
              key: license-key
              optional: true
        
        # Default to env var if secret not found
        - name: NRIA_LICENSE_KEY
          value: ${NEW_RELIC_LICENSE_KEY:-dfb79449d23acce4df582f2f5550abe4FFFFNRAL}
        
        # Infrastructure Agent Settings
        - name: NRIA_OVERRIDE_HOSTNAME_SHORT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        
        # Custom attributes for entity tagging
        - name: NRIA_CUSTOM_ATTRIBUTES
          value: |
            {
              "clusterName": "${CLUSTER_NAME:-strimzi-production-kafka}",
              "environment": "${ENVIRONMENT:-kubernetes}",
              "integration": "msk-shim-enhanced",
              "pipeline": "msk",
              "msk": "true",
              "enhanced": "true",
              "version": "2.0"
            }
        
        # Enhanced logging
        - name: NRIA_LOG_LEVEL
          value: ${LOG_LEVEL:-debug}
        - name: NRIA_VERBOSE
          value: "1"
        
        # Pass through all MSK environment variables
        - name: NRIA_PASSTHROUGH_ENVIRONMENT
          value: >-
            KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,
            MSK_SHIM_ENABLED,MSK_ENHANCED_MODE,MSK_GENERATE_METRICS,
            AWS_ACCOUNT_ID,AWS_REGION,KAFKA_CLUSTER_NAME,
            ENVIRONMENT,MSK_CLUSTER_ARN,CONSUMER_LAG_ENRICHMENT,
            MSK_BATCH_SIZE,MSK_FLUSH_INTERVAL,MSK_AGGREGATION_METHOD
        
        volumeMounts:
        - name: config
          mountPath: /etc/newrelic-infra/integrations.d/
          readOnly: true
        - name: temp
          mountPath: /tmp
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Health checks
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pgrep nri-kafka"
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -f /tmp/nri-kafka.lock || exit 0"
          initialDelaySeconds: 10
          periodSeconds: 10
            
      volumes:
      - name: config
        configMap:
          name: nri-kafka-config-complete
      - name: temp
        emptyDir: {}
      
      # Pod settings
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30