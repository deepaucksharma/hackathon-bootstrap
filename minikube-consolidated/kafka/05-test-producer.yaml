apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-test-producer
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-test-producer
  template:
    metadata:
      labels:
        app: kafka-test-producer
    spec:
      containers:
      - name: producer
        image: bitnami/kafka:latest
        ports:
        - containerPort: 9998
          name: jmx
        env:
        - name: JMX_PORT
          value: "9998"
        - name: KAFKA_JMX_OPTS
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9998 -Dcom.sun.management.jmxremote.rmi.port=9998 -Djava.rmi.server.hostname=0.0.0.0"
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for Kafka..."
          sleep 10
          
          echo "Creating topics..."
          kafka-topics.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --create --topic events --partitions 3 --replication-factor 1 --if-not-exists || true
          kafka-topics.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --create --topic metrics --partitions 3 --replication-factor 1 --if-not-exists || true
          kafka-topics.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --create --topic logs --partitions 3 --replication-factor 1 --if-not-exists || true
          
          echo "Starting continuous producer with JMX enabled..."
          export JMX_PORT=9998
          export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9998 -Dcom.sun.management.jmxremote.rmi.port=9998 -Djava.rmi.server.hostname=0.0.0.0"
          
          while true; do
            echo "Producing messages to events..."
            for i in {1..100}; do echo "Event message $i at $(date)"; done | kafka-console-producer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic events --producer-property client.id=test-producer-events
            
            echo "Producing messages to metrics..."  
            for i in {1..100}; do echo "Metric message $i at $(date)"; done | kafka-console-producer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic metrics --producer-property client.id=test-producer-metrics
            
            echo "Producing messages to logs..."
            for i in {1..100}; do echo "Log message $i at $(date)"; done | kafka-console-producer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic logs --producer-property client.id=test-producer-logs
            
            echo "Batch sent, sleeping..."
            sleep 30
          done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-test-consumer
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-test-consumer
  template:
    metadata:
      labels:
        app: kafka-test-consumer
    spec:
      containers:
      - name: consumer
        image: bitnami/kafka:latest
        ports:
        - containerPort: 9997
          name: jmx
        env:
        - name: JMX_PORT
          value: "9997"
        - name: KAFKA_JMX_OPTS
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9997 -Dcom.sun.management.jmxremote.rmi.port=9997 -Djava.rmi.server.hostname=0.0.0.0"
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for Kafka and topics..."
          sleep 30
          
          echo "Starting consumers with JMX enabled..."
          export JMX_PORT=9997
          export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9997 -Dcom.sun.management.jmxremote.rmi.port=9997 -Djava.rmi.server.hostname=0.0.0.0"
          
          kafka-console-consumer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 \
            --topic events --group test-consumer-group-1 --consumer-property client.id=test-consumer-events --from-beginning &
          
          kafka-console-consumer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 \
            --topic metrics --group test-consumer-group-2 --consumer-property client.id=test-consumer-metrics --from-beginning &
          
          kafka-console-consumer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 \
            --topic logs --group test-consumer-group-3 --consumer-property client.id=test-consumer-logs --from-beginning &
          
          # Keep container running
          tail -f /dev/null