apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nri-kafka-dual-cluster
  namespace: newrelic
  labels:
    app: nri-kafka-dual-cluster
spec:
  selector:
    matchLabels:
      app: nri-kafka-dual-cluster
  template:
    metadata:
      labels:
        app: nri-kafka-dual-cluster
    spec:
      serviceAccountName: nri-kafka
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: nri-kafka
        image: nri-kafka-msk-bundle:v1.2
        imagePullPolicy: Never
        securityContext:
          privileged: true
        env:
        - name: NRIA_LICENSE_KEY
          value: "dfb79449d23acce4df582f2f5550abe4FFFFNRAL"
        - name: NRIA_VERBOSE
          value: "1"
        - name: NRIA_LOG_LEVEL
          value: "debug"
        - name: NRIA_OVERRIDE_HOSTNAME_SHORT
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NRIA_CUSTOM_ATTRIBUTES
          value: '{"clusterName":"minikube","environment":"development","dualKafka":"true"}'
        - name: DISABLE_KUBE_STATE_METRICS
          value: "true"
        - name: NEW_RELIC_METADATA_KUBERNETES_CLUSTER_NAME
          value: "minikube"
        volumeMounts:
        - name: config
          mountPath: /etc/newrelic-infra/integrations.d/
        - name: host-docker-socket
          mountPath: /var/run/docker.sock
        - name: log
          mountPath: /var/log
        - name: host-volume
          mountPath: /host
          readOnly: true
        resources:
          limits:
            memory: 400Mi
          requests:
            cpu: 150m
            memory: 200Mi
      volumes:
      - name: config
        configMap:
          name: nri-kafka-config-dual
      - name: host-docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: log
        hostPath:
          path: /var/log
      - name: host-volume
        hostPath:
          path: /
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute