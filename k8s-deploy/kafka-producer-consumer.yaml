apiVersion: v1
kind: ConfigMap
metadata:
  name: producer-config
  namespace: kafka
data:
  producer.properties: |
    bootstrap.servers=kafka-0.kafka-headless.kafka.svc.cluster.local:9092,kafka-1.kafka-headless.kafka.svc.cluster.local:9092,kafka-2.kafka-headless.kafka.svc.cluster.local:9092
    key.serializer=org.apache.kafka.common.serialization.StringSerializer
    value.serializer=org.apache.kafka.common.serialization.StringSerializer
    acks=all
    retries=3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consumer-config
  namespace: kafka
data:
  consumer.properties: |
    bootstrap.servers=kafka-0.kafka-headless.kafka.svc.cluster.local:9092,kafka-1.kafka-headless.kafka.svc.cluster.local:9092,kafka-2.kafka-headless.kafka.svc.cluster.local:9092
    key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    group.id=test-consumer-group
    auto.offset.reset=earliest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
  namespace: kafka
  labels:
    app: kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      containers:
      - name: producer
        image: bitnami/kafka:3.5.1
        command: ["/bin/bash"]
        args: 
          - -c
          - |
            # Enable JMX for monitoring
            export JMX_PORT=9999
            export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999"
            
            # Wait for Kafka to be ready
            sleep 30
            
            # Create test topics
            kafka-topics.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --create --topic events --partitions 3 --replication-factor 2 --if-not-exists
            kafka-topics.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --create --topic transactions --partitions 3 --replication-factor 2 --if-not-exists
            kafka-topics.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --create --topic logs --partitions 3 --replication-factor 2 --if-not-exists
            
            # Start producing messages
            while true; do
              echo "Message-$(date +%s)" | kafka-console-producer.sh --broker-list kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic events
              echo "Transaction-$(date +%s)" | kafka-console-producer.sh --broker-list kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic transactions
              echo "Log-$(date +%s)" | kafka-console-producer.sh --broker-list kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic logs
              sleep 5
            done
        ports:
        - containerPort: 9999
          name: jmx
        volumeMounts:
        - name: config
          mountPath: /config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: producer-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer
  namespace: kafka
  labels:
    app: kafka-consumer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kafka-consumer
  template:
    metadata:
      labels:
        app: kafka-consumer
    spec:
      containers:
      - name: consumer
        image: bitnami/kafka:3.5.1
        command: ["/bin/bash"]
        args:
          - -c
          - |
            # Enable JMX for monitoring
            export JMX_PORT=9999
            export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999"
            
            # Wait for Kafka to be ready
            sleep 40
            
            # Start consuming messages from all topics
            kafka-console-consumer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic events --group test-consumer-group --from-beginning &
            kafka-console-consumer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic transactions --group test-consumer-group --from-beginning &
            kafka-console-consumer.sh --bootstrap-server kafka-0.kafka-headless.kafka.svc.cluster.local:9092 --topic logs --group test-consumer-group --from-beginning &
            
            # Keep the container running
            tail -f /dev/null
        ports:
        - containerPort: 9999
          name: jmx
        volumeMounts:
        - name: config
          mountPath: /config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: consumer-config