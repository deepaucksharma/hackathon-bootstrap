apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: kafka
  labels:
    app: kafka
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 9092
      targetPort: 9092
      name: kafka
    - port: 9999
      targetPort: 9999
      name: jmx
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        component: broker
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.5.0
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 9093
          name: controller
        - containerPort: 9999
          name: jmx
        env:
        # KRaft Configuration
        - name: KAFKA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka-headless.kafka.svc.cluster.local:9093,1@kafka-1.kafka-headless.kafka.svc.cluster.local:9093,2@kafka-2.kafka-headless.kafka.svc.cluster.local:9093"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: CLUSTER_ID
          value: "NqnEdODVKkiLTfJvqd1uqQ"
        
        # JMX Configuration
        - name: KAFKA_JMX_PORT
          value: "9999"
        - name: KAFKA_JMX_HOSTNAME
          value: "localhost"
        - name: KAFKA_JMX_OPTS
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
        
        command:
        - /bin/bash
        - -c
        - |
          # Extract node ID from pod name
          export KAFKA_NODE_ID=${HOSTNAME##*-}
          
          # Set advertised listeners with pod name
          export KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://${HOSTNAME}.kafka-headless.kafka.svc.cluster.local:9092"
          
          # Update JMX hostname for remote access
          export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=${HOSTNAME}.kafka-headless.kafka.svc.cluster.local"
          
          # Create server.properties with our configuration
          cp /etc/kafka/kafka.properties.template /etc/kafka/server.properties || cp /etc/kafka/server.properties /tmp/server.properties
          
          # Format log directory if needed
          if [ ! -f /var/lib/kafka/data/meta.properties ]; then
            echo "Formatting log directory..."
            /usr/bin/kafka-storage format -t $CLUSTER_ID -c /etc/kafka/server.properties --ignore-formatted
          fi
          
          # Start Kafka
          exec /usr/bin/kafka-server-start /etc/kafka/server.properties --override node.id=$KAFKA_NODE_ID --override advertised.listeners=$KAFKA_ADVERTISED_LISTENERS
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi