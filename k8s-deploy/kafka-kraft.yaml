apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: kafka
  labels:
    app: kafka
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 9092
      targetPort: 9092
      name: kafka
    - port: 9093
      targetPort: 9093
      name: controller
    - port: 9999
      targetPort: 9999
      name: jmx
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        component: broker
    spec:
      containers:
      - name: kafka
        image: apache/kafka:3.7.0
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 9093
          name: controller
        - containerPort: 9999
          name: jmx
        env:
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_PROCESS_ROLES
          value: 'broker,controller'
        - name: KAFKA_LISTENERS
          value: 'PLAINTEXT://:9092,CONTROLLER://:9093'
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-0.kafka-headless.kafka.svc.cluster.local:9092
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: 'CONTROLLER'
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL'
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: '1@kafka-0.kafka-headless.kafka.svc.cluster.local:9093,2@kafka-1.kafka-headless.kafka.svc.cluster.local:9093,3@kafka-2.kafka-headless.kafka.svc.cluster.local:9093'
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: 'PLAINTEXT'
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "2"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_LOG_DIRS
          value: '/var/kafka-logs'
        - name: CLUSTER_ID
          value: 'NqnEdODVKkiLTfJvqd1uqQ'
        # JMX settings
        - name: KAFKA_JMX_PORT
          value: "9999"
        - name: KAFKA_JMX_HOSTNAME
          value: "0.0.0.0"
        command:
        - /bin/bash
        - -c
        - |
          # Set node ID from hostname
          export KAFKA_NODE_ID=$((${HOSTNAME##*-} + 1))
          
          # Set advertised listeners
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${HOSTNAME}.kafka-headless.kafka.svc.cluster.local:9092
          
          # Enable JMX with proper hostname
          export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=${HOSTNAME}.kafka-headless.kafka.svc.cluster.local"
          
          # Start Kafka in KRaft mode
          /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties
        volumeMounts:
        - name: data
          mountPath: /var/kafka-logs
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi