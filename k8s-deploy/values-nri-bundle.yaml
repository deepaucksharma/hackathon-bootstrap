# New Relic Infrastructure Bundle values for nri-kafka integration
# This file configures the nri-bundle Helm chart to deploy nri-kafka as a custom OHI

global:
  licenseKey: dfb79449d23acce4df582f2f5550abe4FFFFNRAL
  cluster: k8s-kafka-cluster
  lowDataMode: false

nri-metadata-injection:
  enabled: true

kube-state-metrics:
  enabled: true

nri-prometheus:
  enabled: true

newrelic-infrastructure:
  enabled: true
  # Configure resource limits for each component (v3 compatible)
  ksm:
    resources:
      limits:
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 150Mi
  controlPlane:
    resources:
      limits:
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 150Mi
  kubelet:
    resources:
      limits:
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 150Mi
  
  # Custom integrations for nri-kafka
  integrations:
    # Kafka Broker Monitoring Configuration
    kafka-broker.yaml: |
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.app: kafka
            label.component: broker
      integrations:
        - name: nri-kafka
          env:
            CLUSTER_NAME: ${CLUSTER_NAME}
            AUTODISCOVER_STRATEGY: bootstrap
            # The broker host must match the advertised name
            BOOTSTRAP_BROKER_HOST: kafka.${discovery.namespace}.svc.cluster.local
            BOOTSTRAP_BROKER_JMX_PORT: "9999"
            BOOTSTRAP_BROKER_KAFKA_PORT: "9092"
            BOOTSTRAP_BROKER_KAFKA_PROTOCOL: PLAINTEXT
            # Collection settings
            METRICS: "true"
            INVENTORY: "true"
            LOCAL_ONLY_COLLECTION: "true"
            # Topic configuration
            TOPIC_MODE: all
            # JMX Authentication (if needed)
            # JMX_USER: admin
            # JMX_PASSWORD: admin-secret
    
    # Consumer Offset Monitoring Configuration
    kafka-offset.yaml: |
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.app: kafka
            label.component: broker
      integrations:
        - name: nri-kafka
          env:
            CLUSTER_NAME: ${CLUSTER_NAME}
            AUTODISCOVER_STRATEGY: bootstrap
            BOOTSTRAP_BROKER_HOST: kafka.${discovery.namespace}.svc.cluster.local
            BOOTSTRAP_BROKER_KAFKA_PORT: "9092"
            BOOTSTRAP_BROKER_KAFKA_PROTOCOL: PLAINTEXT
            # Only collect consumer offset metrics
            METRICS: "false"
            INVENTORY: "false"
            CONSUMER_OFFSET: "true"
            # Match all consumer groups
            CONSUMER_GROUP_REGEX: '.*'
    
    # Producer Monitoring Configuration
    kafka-producer.yaml: |
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.app: kafka-producer
      integrations:
        - name: nri-kafka
          env:
            CLUSTER_NAME: ${CLUSTER_NAME}
            PRODUCERS: '[{"host": "${discovery.ip}", "port": 9999}]'
            TOPIC_MODE: list
            TOPIC_LIST: '["events", "transactions", "logs"]'
            METRICS: "true"
    
    # Consumer Monitoring Configuration
    kafka-consumer.yaml: |
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.app: kafka-consumer
      integrations:
        - name: nri-kafka
          env:
            CLUSTER_NAME: ${CLUSTER_NAME}
            CONSUMERS: '[{"host": "${discovery.ip}", "port": 9999}]'
            TOPIC_MODE: list
            TOPIC_LIST: '["events", "transactions", "logs"]'
            METRICS: "true"

# Logging configuration
logging:
  enabled: true
  
# Privilege mode may be needed for some integrations
privileged: true