---
# Monitoring for Regular Kafka in 'kafka' namespace
apiVersion: v1
kind: ConfigMap
metadata:
  name: nri-kafka-unified-config
  namespace: newrelic
data:
  kafka-config.yml: |
    integrations:
      # Regular Kafka monitoring
      - name: nri-kafka
        command: nri-kafka
        env:
          CLUSTER_NAME: k8s-kafka-cluster
          AUTODISCOVER_STRATEGY: bootstrap
          BOOTSTRAP_BROKER_HOST: kafka-0.kafka-headless.kafka.svc.cluster.local
          BOOTSTRAP_BROKER_JMX_PORT: "9999"
          BOOTSTRAP_BROKER_KAFKA_PORT: "9092"
          BOOTSTRAP_BROKER_KAFKA_PROTOCOL: PLAINTEXT
          DEFAULT_JMX_USER: ""
          DEFAULT_JMX_PASSWORD: ""
          METRICS: "true"
          INVENTORY: "true"
          EVENTS: "true"
          CONSUMER_OFFSET: "true"
          TOPIC_MODE: all
          VERBOSE: "true"
        interval: 30s
        labels:
          env: kubernetes
          role: kafka-broker
          kafka_deployment: regular
---
# Monitoring for Strimzi Kafka in 'strimzi-kafka' namespace
apiVersion: v1
kind: ConfigMap
metadata:
  name: nri-kafka-strimzi-unified-config
  namespace: newrelic
data:
  strimzi-kafka-config.yml: |
    integrations:
      # Strimzi Kafka monitoring
      - name: nri-kafka
        command: nri-kafka
        env:
          CLUSTER_NAME: strimzi-production-kafka
          AUTODISCOVER_STRATEGY: bootstrap
          BOOTSTRAP_BROKER_HOST: production-kafka-kafka-bootstrap.strimzi-kafka.svc.cluster.local
          BOOTSTRAP_BROKER_KAFKA_PORT: "9092"
          BOOTSTRAP_BROKER_JMX_PORT: "9999"
          DEFAULT_JMX_USER: "rCe1MjLc8TCwQd3V"
          DEFAULT_JMX_PASSWORD: "eDDTQCWmvXHTQFiB"
          METRICS: "true"
          INVENTORY: "true"
          EVENTS: "true"
          CONSUMER_OFFSET: "true"
          TOPIC_MODE: all
          VERBOSE: "true"
        interval: 30s
        labels:
          env: kubernetes
          kafka_deployment: strimzi
          operator: strimzi
---
# DaemonSet to monitor both Kafka clusters
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nri-kafka-unified-monitor
  namespace: newrelic
  labels:
    app: nri-kafka-unified
spec:
  selector:
    matchLabels:
      app: nri-kafka-unified
  template:
    metadata:
      labels:
        app: nri-kafka-unified
    spec:
      serviceAccountName: nri-bundle
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: agent
        image: newrelic/infrastructure-bundle:3.2.71
        securityContext:
          privileged: true
        env:
        - name: NRIA_LICENSE_KEY
          value: "dfb79449d23acce4df582f2f5550abe4FFFFNRAL"
        - name: NRIA_VERBOSE
          value: "1"
        - name: CLUSTER_NAME
          value: "k8s-kafka-cluster"
        - name: NEW_RELIC_METADATA_KUBERNETES_CLUSTER_NAME
          value: "k8s-kafka-cluster"
        - name: NEW_RELIC_METADATA_KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        volumeMounts:
        - name: regular-kafka-config
          mountPath: /etc/newrelic-infra/integrations.d/kafka-config.yml
          subPath: kafka-config.yml
        - name: strimzi-kafka-config
          mountPath: /etc/newrelic-infra/integrations.d/strimzi-kafka-config.yml
          subPath: strimzi-kafka-config.yml
      volumes:
      - name: regular-kafka-config
        configMap:
          name: nri-kafka-unified-config
      - name: strimzi-kafka-config
        configMap:
          name: nri-kafka-strimzi-unified-config
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
---
# Sidecar deployment for Regular Kafka (more reliable for JMX)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-sidecar-monitor
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-sidecar-monitor
  template:
    metadata:
      labels:
        app: kafka-sidecar-monitor
    spec:
      containers:
      # Kafka container
      - name: kafka
        image: bitnami/kafka:3.5.1
        ports:
        - containerPort: 9092
          name: broker
        - containerPort: 9999
          name: jmx
        env:
        - name: KAFKA_CFG_BROKER_ID
          value: "200"
        - name: KAFKA_CFG_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-sidecar-monitor.kafka.svc.cluster.local:9092
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: JMX_PORT
          value: "9999"
        - name: KAFKA_JMX_OPTS
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=localhost"
      
      # NRI-Kafka sidecar
      - name: nri-kafka
        image: newrelic/infrastructure-bundle:3.2.71
        env:
        - name: NRIA_LICENSE_KEY
          value: "dfb79449d23acce4df582f2f5550abe4FFFFNRAL"
        - name: NRIA_VERBOSE
          value: "1"
        - name: CLUSTER_NAME
          value: "k8s-kafka-cluster"
        volumeMounts:
        - name: sidecar-config
          mountPath: /etc/newrelic-infra/integrations.d/
      volumes:
      - name: sidecar-config
        configMap:
          name: kafka-sidecar-monitor-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-sidecar-monitor-config
  namespace: kafka
data:
  nri-kafka-config.yml: |
    integrations:
      - name: nri-kafka
        command: nri-kafka
        env:
          CLUSTER_NAME: k8s-kafka-cluster-sidecar
          AUTODISCOVER_STRATEGY: bootstrap
          BOOTSTRAP_BROKER_HOST: localhost
          BOOTSTRAP_BROKER_JMX_PORT: "9999"
          BOOTSTRAP_BROKER_KAFKA_PORT: "9092"
          BOOTSTRAP_BROKER_KAFKA_PROTOCOL: PLAINTEXT
          DEFAULT_JMX_USER: ""
          DEFAULT_JMX_PASSWORD: ""
          METRICS: "true"
          INVENTORY: "true"
          EVENTS: "true"
          CONSUMER_OFFSET: "true"
          TOPIC_MODE: all
          VERBOSE: "true"
        interval: 30s
        labels:
          env: kubernetes
          role: kafka-broker-sidecar
          kafka_deployment: regular-sidecar
---
# Service for sidecar Kafka
apiVersion: v1
kind: Service
metadata:
  name: kafka-sidecar-monitor
  namespace: kafka
spec:
  ports:
  - name: broker
    port: 9092
  - name: jmx
    port: 9999
  selector:
    app: kafka-sidecar-monitor