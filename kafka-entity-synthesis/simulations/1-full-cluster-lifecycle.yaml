name: "Phase 4 / Simulation 1: Full Cluster Lifecycle"
description: "Create a complete cluster with brokers and verify relationships"
steps:
  - step: 1
    name: "Create MSK Cluster"
    payload:
      eventType: "AwsMskClusterSample"
      timestamp: ${timestamp}
      entityName: "sim-kafka-cluster-${timestamp}"
      entityGuid: "cluster-guid-${timestamp}"
      entityId: 1001
      collector.name: "cloud-integrations"
      instrumentation.provider: "aws"
      provider: "AwsMskCluster"
      providerAccountId: "${accountId}"
      providerAccountName: "Simulation Account"
      providerExternalId: "123456789012"
      awsAccountId: "123456789012"
      awsRegion: "us-east-1"
      provider.clusterName: "sim-kafka-cluster-${timestamp}"
      provider.clusterSize: 3
      provider.kafkaVersion: "2.8.1"
      provider.activeTopicsCount.Sum: 10
      provider.activeTopicsCount.Average: 10
      provider.activeTopicsCount.Maximum: 10
      provider.activeTopicsCount.Minimum: 10
      provider.activeTopicsCount.SampleCount: 1
    waitAfter: 30

  - step: 2
    name: "Create Broker 1"
    payload:
      eventType: "AwsMskBrokerSample"
      timestamp: ${timestamp}
      entityName: "1:sim-kafka-cluster-${timestamp}"
      entityGuid: "broker1-guid-${timestamp}"
      entityId: 2001
      collector.name: "cloud-integrations"
      instrumentation.provider: "aws"
      provider: "AwsMskBroker"
      providerAccountId: "${accountId}"
      providerAccountName: "Simulation Account"
      providerExternalId: "123456789012"
      awsAccountId: "123456789012"
      awsRegion: "us-east-1"
      provider.brokerId: "1"
      provider.clusterName: "sim-kafka-cluster-${timestamp}"
      provider.bytesInPerSec.Sum: 150000
      provider.bytesInPerSec.Average: 2500
      provider.bytesInPerSec.Maximum: 5000
      provider.bytesInPerSec.Minimum: 1000
      provider.bytesInPerSec.SampleCount: 60
    waitAfter: 10

  - step: 3
    name: "Create Broker 2"
    payload:
      eventType: "AwsMskBrokerSample"
      timestamp: ${timestamp}
      entityName: "2:sim-kafka-cluster-${timestamp}"
      entityGuid: "broker2-guid-${timestamp}"
      entityId: 2002
      collector.name: "cloud-integrations"
      instrumentation.provider: "aws"
      provider: "AwsMskBroker"
      providerAccountId: "${accountId}"
      providerAccountName: "Simulation Account"
      providerExternalId: "123456789012"
      awsAccountId: "123456789012"
      awsRegion: "us-east-1"
      provider.brokerId: "2"
      provider.clusterName: "sim-kafka-cluster-${timestamp}"
      provider.bytesInPerSec.Sum: 200000
      provider.bytesInPerSec.Average: 3333
      provider.bytesInPerSec.Maximum: 6666
      provider.bytesInPerSec.Minimum: 1333
      provider.bytesInPerSec.SampleCount: 60
    waitAfter: 10

  - step: 4
    name: "Create Broker 3"
    payload:
      eventType: "AwsMskBrokerSample"
      timestamp: ${timestamp}
      entityName: "3:sim-kafka-cluster-${timestamp}"
      entityGuid: "broker3-guid-${timestamp}"
      entityId: 2003
      collector.name: "cloud-integrations"
      instrumentation.provider: "aws"
      provider: "AwsMskBroker"
      providerAccountId: "${accountId}"
      providerAccountName: "Simulation Account"
      providerExternalId: "123456789012"
      awsAccountId: "123456789012"
      awsRegion: "us-east-1"
      provider.brokerId: "3"
      provider.clusterName: "sim-kafka-cluster-${timestamp}"
      provider.bytesInPerSec.Sum: 175000
      provider.bytesInPerSec.Average: 2916
      provider.bytesInPerSec.Maximum: 5833
      provider.bytesInPerSec.Minimum: 1166
      provider.bytesInPerSec.SampleCount: 60
    waitAfter: 30

verification:
  - step: 5
    name: "Verify Cluster Entity"
    checks:
      - type: "entityExists"
        details:
          entityName: "sim-kafka-cluster-${timestamp}"
          entityType: "AWS_KAFKA_CLUSTER"
      
      - type: "entityIsVisibleInUi"
        details:
          entityName: "sim-kafka-cluster-${timestamp}"
          uiContext: "queuesAndStreams"

  - step: 6
    name: "Verify Broker Relationships"
    checks:
      - type: "relationshipExists"
        details:
          parentEntityName: "sim-kafka-cluster-${timestamp}"
          childEntityName: "1:sim-kafka-cluster-${timestamp}"
          relationshipType: "MANAGES"
      
      - type: "relationshipExists"
        details:
          parentEntityName: "sim-kafka-cluster-${timestamp}"
          childEntityName: "2:sim-kafka-cluster-${timestamp}"
          relationshipType: "MANAGES"
      
      - type: "relationshipExists"
        details:
          parentEntityName: "sim-kafka-cluster-${timestamp}"
          childEntityName: "3:sim-kafka-cluster-${timestamp}"
          relationshipType: "MANAGES"

  - step: 7
    name: "Verify UI Aggregations"
    checks:
      - type: "uiQuery"
        details:
          query: "FROM AwsMskBrokerSample SELECT sum(provider.bytesInPerSec.Average) WHERE provider.clusterName = 'sim-kafka-cluster-${timestamp}' SINCE 30 minutes ago"
          expectedValue: 8749  # Sum of all three broker averages

expectedOutcome: "Complete cluster with relationships visible in Q&S UI"
keyInsight: "provider.clusterName establishes parent-child relationships between cluster and brokers"